#
#	Do note that this here configuration generally assumes procmail (1)
# as MDA delivering to Maildir-style mailboxes.
#

# Hard-wire any variable known to Mutt to its compile-time default to
# safely commence configuration from scratch, as documented in muttrc (5).
reset

# `push' the version string of Mutt configured by this file to the keyboard
# buffer to facilitate MUA version identification.
push V

#
# Infer the maximum number of colours implemented by and thus possibly
# visible on Mutt's controlling terminal's from the corresponding /Co/
# [terminfo(5): {max_,}colors] capability.
#
set my_colours=`(infocmp | sed -n '/colors#[0-9]\+/s/^.*colors#\([0-9]\+\).*$/\1/p') 2>/dev/null`

# {{{ General {options,tunables}
# When set, functions in the index menu which affect a message will
# be applied to all tagged messages (if there are any). When unset, you
# must first use the <tag-prefix> function (bound to “;” by default)
# to make the next function apply to all tagged messages.
set auto_tag=yes

# When this variable is set, mutt will beep when an error occurs.
unset beep

# When set, Mutt will prompt for confirmation when appending messages to an existing mailbox.
unset confirmappend

# Controls whether or not messages are really deleted when closing or
# synchronizing a mailbox. If set to yes, messages marked for deleting
# will automatically be purged without prompting. If set to no, messages
# marked for deletion will be kept in the mailbox.
set delete=yes

# If set, messages marked as deleted will be saved with the maildir trashed
# flag instead of unlinked. Note: this only applies to maildir-style
# mailboxes. Setting it will have no effect on other mailbox types.
set maildir_trash=yes

#
# Used in connection with the <pipe-message> function following
# <tag-prefix>. If this variable is unset, when piping a list of tagged
# messages Mutt will concatenate the mes‐ sages and will pipe them
# all concatenated. When set, Mutt will pipe the messages one by one. In
# both cases the messages are piped in the current sorted order, and the
# $pipe_sep separator is added after each message.
#
set pipe_split=yes

# If you use an external $pager, setting this variable will cause Mutt to
# prompt you for a command when the pager exits rather than returning to
# the index menu. If unset, Mutt will return to the index menu when the
# external pager exits.
unset prompt_after

#
# Specifies how to sort messages in the “index” menu.  Valid values are:
# ‐ date or date-sent
# ‐ date-received
# ‐ from
# ‐ mailbox-order (unsorted)
# ‐ score
# ‐ size
# ‐ spam
# ‐ subject
# ‐ threads
# ‐ to
#
# You may optionally use the “reverse-” prefix to specify reverse sorting order (example: “set sort=reverse-date-sent”).
#
set sort=threads

#
# Controls whether Mutt will ask you to press a key after an external
# command has been invoked by these functions: <shell-escape>,
# <pipe-message>, <pipe-entry>, <print-mes‐ sage>, and <print-entry>
# commands.
#
# It is also used when viewing attachments with “auto_view”, provided
# that the corresponding mailcap entry has a needsterminal flag, and the
# external program is interactive.
#
# When set, Mutt will always ask for a key. When unset, Mutt will wait
# for a key only if the external command returned a non-zero status.
#
unset wait_key
# }}}
# {{{ Composition and formatting
#
# This variable is a colon-separated list of character encoding schemes
# for messages without character encoding indication. Header field values
# and message body content with‐ out character encoding indication would
# be assumed that they are written in one of this list. By default, all
# the header fields and message body without any charset indica‐ tion
# are assumed to be in “us-ascii”.
#
# For example, Japanese users might prefer this:
#
# set assumed_charset=”iso-2022-jp:euc-jp:shift_jis:utf-8”
#
# However, only the first content is valid for the message body.
#
set assumed_charset="utf-8:iso8859-15:iso8859-1:cp1252:us-ascii"

#
# Character set your terminal uses to display and enter textual data. It
# is also the fallback for $send_charset.
#
# Upon startup Mutt tries to derive this value from environment variables
# such as $LC_CTYPE or $LANG.
#
# Note: It should only be set in case Mutt isn't able to determine the
# character set used correctly.
#
set charset="utf-8"

#
# This option allows you to edit the header of your outgoing messages
# along with the body of your message.
#
# Although the compose menu may have localized header labels, the labels
# passed to your editor will be standard RFC 2822 headers, (e.g. To:, Cc:,
# Subject:). Headers added in your editor must also be RFC 2822 headers,
# or one of the pseudo headers listed in “edit-header”.  Mutt will not
# understand localized header labels, just as it would not when parsing
# an actual email.
#
# Note that changes made to the References: and Date: headers are ignored
# for interoperability reasons.
#
set edit_headers=yes

#
# This variable specifies which editor is used by mutt. It defaults to
# the value of the $VISUAL, or $EDITOR, environment variable, or to the
# string “vi” if neither of those are set.
#
# The $editor string may contain a %s escape, which will be replaced by
# the name of the file to be edited. If the %s escape does not appear in
# $editor, a space and the name to be edited are appended.
#
# The resulting string is then executed by running
#
# sh -c 'string'
#
# where string is the expansion of $editor described above.
#
set editor="vim -c '/^$/;+1' -c 'set nobackup' -c 'set tw=80'"

#
# A colon-delimited list of character sets for outgoing messages. Mutt
# will use the first character set into which the text can be converted
# exactly. If your $charset is not “iso-8859-1” and recipients
# may not understand “UTF-8”, it is advisable to include in the
# list an appropriate widely used standard character set (such as
# “iso-8859-2”, “koi8-r” or “iso-2022-jp”) either instead of
# or after “iso-8859-1”.
#
# In case the text cannot be converted into one of these exactly, mutt
# uses $charset as a fallback.
#
set send_charset="utf-8:iso-8859-1:us-ascii"
# }}}
# {{{ File and path names
#
# The default file in which to save aliases created by the <create-alias>
# function. Entries added to this file are encoded in the character set
# specified by $config_charset if it is set or the current character
# set otherwise.
#
# Note: Mutt will not automatically source this file; you must explicitly
# use the “source” command for it to be executed in case this option
# points to a dedicated alias file.
#
# The default for this option is the currently used muttrc file, or
# “~/.muttrc” if no user muttrc was found.
#
set alias_file="~/.mutt/aliases"

#
# This variable specifies which files to consult when attempting to display
# MIME bodies not directly supported by Mutt. The default value is generated
# during startup: see the “mailcap” section of the manual.
#
set mailcap_path="$HOME/.mutt/mailcap"
# }}}
# {{{ Message header ignoring and order
ignore		*

# N.B.	`From:' vs. `From' (e.g. envelope recipient)
unignore	From:
unignore	Return-Path To Cc Newsgroup
unignore	Subject Date Message-Id
unignore	X-Spam-Status X-Bogosity

# With this command, you can specify an order in which mutt will attempt
# to present headers to you when viewing messages.
hdr_order	*
hdr_order	Return-Path Date From: To Message-Id Subject
hdr_order	Newsgroup X-Spam-Status X-Bogosity
# }}}
# {{{ Sidebar
# This specifies the characters to be drawn between the sidebar (when
# visible) and the other Mutt panels. ASCII and Unicode line-drawing
# characters are supported.
set sidebar_divider_char="│"

#
# This variable allows you to customize the sidebar display. This string is
# similar to $index_format, but has its own set of printf(3)-like sequences:
#
# %B    Name of the mailbox
# %S    * Size of mailbox (total number of messages)
# %N    * Number of unread messages in the mailbox
# %n    N if mailbox has new mail, blank otherwise
# %F    * Number of Flagged messages in the mailbox
# %!    “!” : one flagged message; “!!” : two flagged messages; “n!” : n flagged messages (for n > 2). Otherwise prints nothing.
# %d    * @ Number of deleted messages
# %L    * @ Number of messages after limiting
# %t    * @ Number of tagged messages
# %>X    right justify the rest of the string and pad with “X”
# %|X    pad to the end of the line with “X”
# %*X    soft-fill with character “X” as pad
#
# * = Can be optionally printed if nonzero @ = Only applicable to the
# current folder
#
# In order to use %S, %N, %F, and %!, $mail_check_stats must be set. When
# thus set, a suggested value for this option is ”%B%?F? [%F]?%*
# %?N?%N/?%S”.
#
set sidebar_format="%B %* [%?N?%N/?%S]"

# This specifies whether or not to show sidebar. The sidebar shows a list
# of all your mailboxes.
set sidebar_visible=yes

# This controls the width of the sidebar. It is measured in screen
# columns. For example: sidebar_width=20 could display 20 ASCII characters,
# or 10 Chinese characters.
set sidebar_width=25
# }}}
# {{{ Spam and scoring
#
# These commands define spam-detection patterns from external spam
# filters, so that mutt can sort, limit, and search on ``spam tags'' or
# ``spam attributes'', or display them in the index. See the Mutt manual
# for details.
#
spam	"X-Bogosity: Spam"	"bm:spam"
spam	"X-Bogosity: Unsure"	"bm:us"
# }}}

source `[ -r ${HOME}/.mutt/local.rc ] && { printf "%s/.mutt/local.rc" "${HOME}"; }`
source $HOME/.mutt/binds
source $HOME/.mutt/colours$my_colours.rc
source $HOME/.mutt/hooks

# vim:ft=muttrc foldmethod=marker noexpandtab sw=8 ts=8 tw=80
