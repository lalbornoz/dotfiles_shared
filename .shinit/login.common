#
# Catch-all sh (1) login shell script sourced on every host prior to
# per-hostname (specific) scripts
#

_lc_which() { command -v "${@}" >|/dev/null 2>&1; };

#
# Don't permit other users to write (1) to this terminal.
_lc_which mesg && mesg n 2>/dev/null;

#
# Drop a fortune cookie and relevant system diagnostics/information.
_lc_which fortune && { fortune -s; echo; };
_lc_which uname && uname -mnrsv;
_lc_which uptime && uptime;

#
# Print the `TODO' file if present.
[ -r "${HOME}/TODO" ] && { printf "\nTODO:\n"; sed -ne '/^vim:/!p' "${HOME}/TODO"; };

#
# Print listing of the five (5) last logins for the current user and
# faillog records.
_lc_which last && [ -r /var/log/lastlog ] && last -5 "${USER}";
_lc_which faillog && [ -r /var/log/faillog ] && faillog;

#
# Force sane stty settings.
_lc_which stty && stty sane;

#
# Eval/run ssh-pageant(1) and eval ~/.ssh/agent.env on Cygwin
_lc_ssh_pageant() {
	if [ -e "${HOME}/.ssh/agent.env" ]; then
		. "${HOME}/.ssh/agent.env" >/dev/null;
		if ! [ -d "/proc/${SSH_PAGEANT_PID:--1}/" ]; then
			rm -f "${HOME}/.ssh/agent.env";
			ssh-pageant > "${HOME}/.ssh/agent.env";
		fi;
		. "${HOME}/.ssh/agent.env";
	else
		ssh-pageant > "${HOME}/.ssh/agent.env";
		. "${HOME}/.ssh/agent.env";
	fi;
};

if _lc_which uname	\
&& [ "$(uname -o 2>/dev/null)" = "Cygwin" ]; then
	_lc_ssh_pageant;
fi;

unset -f _lc_ssh_pageant;


unset -f _lc_which;

# vim:filetype=sh foldmethod=marker noexpandtab sw=8 ts=8
