"
" [Mappings] Project menu mappings
"

call roarie_commands#AddMenu("&Project")
if has('nvim')
call roarie_commands#AddMapping("&Project", "build", "&Build...", "Build project w/ BuildMe and .buildme.sh", "<silent>", '<F5>', ':<C-U>BuildMe<CR>', "<fnalias>", "")
call roarie_commands#AddMapping("&Project", "run", "&Run...", "Run project w/ RunMe and .runme.sh", "<silent>", '<S-F5>', ':<C-U>RunMe<CR>', "<fnalias>", "ﰌ")
call roarie_commands#AddMapping("&Project", "build_run", "Build and &run...", "Build and run project w/ {Build,Run}Me and .{build,run}me.sh", "<silent>", '<C-F5>', ':<C-U>BuildRunMe<CR>', "<fnalias>", "ﰌ")
call roarie_commands#AddMapping("&Project", "build_submenu", "Build sub&menu...", "Build and run project submenu", "<silent>", '<C-S-F5>', ':<C-U>call roarie_commands#OpenSubMenu("build_submenu")<CR>', "<fnalias>", "")
call roarie_commands#AddSubMenu("build_submenu", "Build submenu")
call roarie_commands#AddSubMenuItem("build_submenu", "build", " ", "&Build", ":BuildMe")
call roarie_commands#AddSubMenuItem("build_submenu", "build_args", " ", "Build with &arguments...", ":BuildMe ")
call roarie_commands#AddSubMenuItem("build_submenu", "build_stop", " ", "&Stop build job", ":BuildMeStop")
call roarie_commands#AddSubMenuItem("build_submenu", "build_set_args", " ", "Set &default build arguments...", ":BuildMeEditArgs ")
call roarie_commands#AddSubMenuItem("build_submenu", "", " ", "Current:                      ", ":BuildMeEditArgs ", 'return "Current: " .. (require("roarie-buildme").getargsbuild() or "")', 'return ":BuildMeEditArgs " .. (require("roarie-buildme").getargsbuild() or "")')
call roarie_commands#AddSubMenuItem("build_submenu", "build_edit_cwd", " ", "Set build &working directory...", ":BuildMeEditCwd ")
call roarie_commands#AddSubMenuItem("build_submenu", "build_jump", " ", "&Jump to build buffer", ":BuildMeJump")
call roarie_commands#AddSubMenuItem("build_submenu", "build_edit", " ", "&Edit build file", ":BuildMeEdit")
call roarie_commands#AddSubMenuItem("build_submenu", "build_set_autoclose", " ", "Set auto-&close build window...", ":BuildMeSetAutoClose ")
call roarie_commands#AddSubMenuItem("build_submenu", "", " ", "--", "")
call roarie_commands#AddSubMenuItem("build_submenu", "run", " ", "&Run", ":RunMe")
call roarie_commands#AddSubMenuItem("build_submenu", "run_args", " ", "Run with &arguments...", ":RunMe ")
call roarie_commands#AddSubMenuItem("build_submenu", "run_stop", " ", "&Stop run job", ":RunMeStop")
call roarie_commands#AddSubMenuItem("build_submenu", "run_set_args", " ", "Set &default run arguments...", ":RunMeEditArgs ")
call roarie_commands#AddSubMenuItem("build_submenu", "", " ", "Current:                    ", ":RunMeEditArgs ", 'return "Current: " .. (require("roarie-buildme").getargsrun() or "")', 'return ":RunMeEditArgs " .. (require("roarie-buildme").getargsrun() or "")')
call roarie_commands#AddSubMenuItem("build_submenu", "run_edit_cwd", " ", "Set run &working directory...", ":RunMeEditCwd ")
call roarie_commands#AddSubMenuItem("build_submenu", "run_jump", " ", "&Jump to run buffer", ":RunMeJump")
call roarie_commands#AddSubMenuItem("build_submenu", "run_edit", " ", "&Edit run file", ":RunMeEdit")
call roarie_commands#AddSubMenuItem("build_submenu", "run_set_autoclose", " ", "Set auto-&close run window...", ":RunMeSetAutoClose ")
call roarie_commands#AddSeparator("&Project")
else
call roarie_commands#AddMapping("&Project", "build", "&Build...", "Run make, open QuickFix window & redraw", "<silent>", '<F5>', ':<C-U>Make<CR>', "<fnalias>")
endif
if has('nvim')
call roarie_commands#AddMapping("&Project", "gdb_submenu", "GD&B submenu...", "GD&B submenu...", "<silent>", '<M-F5>', ':<C-U>call roarie_commands#OpenSubMenu("gdb_submenu")<CR>', "<fnalias>", "")
call roarie_commands#AddSubMenu("gdb_submenu", "GDB submenu")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_start", " ", "&Start debugging session", ":GdbStart gdb -q ./a.out")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_start_lldb", " ", "&Start debugging session with LLDB", ":GdbStartLLDB lldb ./a.out")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_start_python", " ", "Start &Python debugging session", ":GdbStartPDB python -m pdb main.py")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_start_bash", " ", "Start BAS&H debugging session", ":GdbStartBashDB bashdb main.sh")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_start_rr", " ", "Start debugging session with &rr replay", ":GdbStartRR")
call roarie_commands#AddSubMenuItem("gdb_submenu", "", " ", "--", "")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_toggle_breakpoint", " ", "Toggle &breakpoint in the cursor line", ":GdbBreakpointToggle")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_continue_until", " ", "Continue e&xecution until a given line", ":GdbUntil")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_continue", " ", "&Continue execution", ":GdbContinue")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_step_over", " ", "Step &over the next statement", ":GdbNext")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_step_into", " ", "Step &into the next statement", ":GdbStep")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_step_out", " ", "Step ou&t the current frame", ":GdbFinish")
call roarie_commands#AddSubMenuItem("gdb_submenu", "", " ", "--", "")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_frame_up", " ", "Navigate one frame &up", ":GdbFrameUp")
call roarie_commands#AddSubMenuItem("gdb_submenu", "gdb_frame_down", " ", "Navigate one frame &down", ":GdbFrameDown")
call roarie_commands#AddMapping("&Project", "gdb_continue", "Continue in GD&B", "Continue execution in GD&B", "<silent>", '<M-S-F5>', ':<C-U>GdbContinue<CR>', "<fnalias>", "")
call roarie_commands#AddMapping("&Project", "gdb_step_into", "Step into st&atement", "Step into st&atement in GD&B", "<silent>", '<M-PageUp>', ':<C-U>GdbStep<CR>', "", "")
call roarie_commands#AddMapping("&Project", "gdb_step_over", "Step over st&atement", "Step over st&atement in GD&B", "<silent>", '<M-PageDown>', ':<C-U>GdbNext<CR>', "", "")
call roarie_commands#AddMapping("&Project", "gdb_frame_up", "&Frame up in GD&B", "Navigate one frame up in GD&B", "<silent>", '<M-S-PageUp>', ':<C-U>GdbFrameUp<CR>', "", "")
call roarie_commands#AddMapping("&Project", "gdb_frame_down", "&Frame down in GD&B", "Navigate one frame down in GD&B", "<silent>", '<M-S-PageDown>', ':<C-U>GdbFrameDown<CR>', "", "")
call roarie_commands#AddMapping("&Project", "gdb_toggle_breakpoint", "Toggle GD&B breakpoint", "Toggle GD&B breakpoint in the cursor line", "<silent>", '<C-b>', ':<C-U>GdbBreakpointToggle<CR>', "", "")
endif
call roarie_commands#AddSeparator("&Project")
call roarie_commands#AddMapping("&Project", "git_status", "&Git status", "Bring up summary window akin to git-status", "<silent>", '<F6>', ':<C-U>Git<CR>', "<fnalias>", "")
call roarie_commands#AddMapping("&Project", "git_log", "&Git log", "Git log", "<silent>", '<S-F6>', ':<C-U>Git log<CR>', "<fnalias>", "")
call roarie_commands#AddMapping("&Project", "git_diff", "&Git diff", "Print global Git diff into new scratch window", "<silent>", '<C-F6>', ':<C-U>Git diff<CR>', "<fnalias>", "")
call roarie_commands#AddMapping("&Project", "git_diffsplit", "&Git diffsplit", "Git diff of current file w/ split window", "<silent>", '<C-S-F6>', ':<C-U>Gdiffsplit<CR>', "<fnalias>", "")
call roarie_commands#AddMapping("&Project", "git_submenu", "&Git submenu...", "Git submenu...", "<silent>", '<M-F6>', ':<C-U>call roarie_commands#OpenSubMenu("git_submenu")<CR>', "<fnalias>", "")
call roarie_commands#AddSubMenu("git_submenu", "Git submenu")
call roarie_commands#AddSubMenuItem("git_submenu", "git_status", " ", "Git stat&us", ":Git")
call roarie_commands#AddSubMenuItem("git_submenu", "git_browse", " ", "&Browse in web front-end", ":GBrowse")
call roarie_commands#AddSubMenuItem("git_submenu", "git_commit", " ", "&Record changes to the repository", ":Git commit")
call roarie_commands#AddSubMenuItem("git_submenu", "git_rebase", " ", "Re&apply commits on top of another base tip", ":Git rebase")
call roarie_commands#AddSubMenuItem("git_submenu", "git_write", " ", "Git &add with work tree file, Git checkout from index or blob", ":Gwrite")
call roarie_commands#AddSubMenuItem("git_submenu", "git_log", " ", "Show commit &logs", ":Git log")
call roarie_commands#AddSubMenuItem("git_submenu", "", " ", "--", "")
call roarie_commands#AddSubMenuItem("git_submenu", "git_diffsplit", " ", "Bring up stage&d and working tree version of file", ":Gdiffsplit")
call roarie_commands#AddSubMenuItem("git_submenu", "git_vdiffsplit", " ", "Bring up stage&d and working tree version of file (vertical)", ":Gvdiffsplit")
call roarie_commands#AddSubMenuItem("git_submenu", "git_diff", " ", "Show &changes between commits, commit and working tree, etc", ":Git diff")
call roarie_commands#AddSubMenuItem("git_submenu", "git_difftool", " ", "Show &changes using common diff tools", ":Git difftool")
call roarie_commands#AddSubMenuItem("git_submenu", "", " ", "--", "")
call roarie_commands#AddSubMenuItem("git_submenu", "git_delete", " ", "Git &rm current file and delete buffer", ":GDelete")
call roarie_commands#AddSubMenuItem("git_submenu", "git_remove", " ", "Git &rm current file without deleting buffer", ":GRemove")
call roarie_commands#AddSubMenuItem("git_submenu", "git_move", " ", "Git &mv current file and delete buffer", ":GMove")
call roarie_commands#AddSubMenuItem("git_submenu", "git_rename", " ", "Git &mv current file without deleting buffer", ":GRename")
call roarie_commands#AddSubMenuItem("git_submenu", "", " ", "--", "")
call roarie_commands#AddSubMenuItem("git_submenu", "git_blame", " ", "Show &what revision and author last modified each line of file", ":Git blame")
call roarie_commands#AddSubMenuItem("git_submenu", "git_grep", " ", "Git &grep (Quickfix window)", ":Ggrep")
call roarie_commands#AddSubMenuItem("git_submenu", "git_lgrep", " ", "Git &grep (location list)", ":Glgrep")
call roarie_commands#AddSubMenuItem("git_submenu", "git_read", " ", "Git checkou&t on and into current buffer", ":Gread")
call roarie_commands#AddSubMenuItem("git_submenu", "git_mergetool", " ", "Run merge con&flict resolution tools to resolve merge conflicts", ":Git mergetool")
call roarie_commands#AddSubMenuItem("git_submenu", "", " ", "--", "")
call roarie_commands#AddSubMenuItem("git_submenu", "git_edit", " ", "&View blob, tree, commit, or tag", ":Gedit")
call roarie_commands#AddSubMenuItem("git_submenu", "git_split", " ", "&Split work tree file or revision", ":Gsplit")
call roarie_commands#AddSubMenuItem("git_submenu", "git_vsplit", " ", "&Split work tree file or revision (vertical)", ":Gvsplit")
if has('nvim')
call roarie_commands#AddMapping("&Project", "telescope_git_commits", "Telescope &git_commits...", "Telescope git_commits...", '', '<M-S-F6>', ':<C-U>Telescope git_commits<CR>', "<fnalias>", "ﰖ")
call roarie_commands#AddMapping("&Project", "git_lazygit", "&LazyGit...", "Open LazyGit window...", "<silent>", '<C-y>', ':<C-U>lua _lazygit_toggle()<CR>', "", "")
endif

" vim:filetype=vim noexpandtab sw=8 ts=8 tw=0
